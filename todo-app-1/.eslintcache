[{"/Volumes/SIDHU/Sidhu/Recat Files/todo-app-1/src/index.js":"1","/Volumes/SIDHU/Sidhu/Recat Files/todo-app-1/src/App.js":"2","/Volumes/SIDHU/Sidhu/Recat Files/todo-app-1/src/components/TodoForm.js":"3","/Volumes/SIDHU/Sidhu/Recat Files/todo-app-1/src/components/TodoList.js":"4","/Volumes/SIDHU/Sidhu/Recat Files/todo-app-1/src/components/Todo.js":"5"},{"size":493,"mtime":1609599286000,"results":"6","hashOfConfig":"7"},{"size":298,"mtime":1609655710000,"results":"8","hashOfConfig":"7"},{"size":692,"mtime":1609655346000,"results":"9","hashOfConfig":"7"},{"size":1158,"mtime":1609654906000,"results":"10","hashOfConfig":"7"},{"size":1186,"mtime":1609654836000,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"m5e42t",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"14"},"/Volumes/SIDHU/Sidhu/Recat Files/todo-app-1/src/index.js",[],["24","25"],"/Volumes/SIDHU/Sidhu/Recat Files/todo-app-1/src/App.js",[],"/Volumes/SIDHU/Sidhu/Recat Files/todo-app-1/src/components/TodoForm.js",[],"/Volumes/SIDHU/Sidhu/Recat Files/todo-app-1/src/components/TodoList.js",[],"/Volumes/SIDHU/Sidhu/Recat Files/todo-app-1/src/components/Todo.js",["26"],"import React, { useState } from \"react\";\nimport TodoForm from \"./TodoForm\";\nimport { RiCloseCircleLine } from \"react-icons/ri\";\nimport { TiEdit } from \"react-icons/ti\";\n\nfunction Todo({ todos, completeTodo, removeTodo, updateTodo }) {\n  const [edit, setEdit] = useState({\n    id: null,\n    value: \"\",\n  });\n\n  const submitUpdate = (value) => {\n    updateTodo(edit.id, value);\n    setEdit({\n      id: null,\n      value: \"\",\n    });\n\n    if (edit.id) {\n      return <TodoForm edit={edit} onSubmit={submitUpdate}></TodoForm>;\n    }\n  };\n\n  return todos.map((todo, index) => (\n    <div\n      className={todo.isComplete ? \"todorow complete\" : \"todo-row\"}\n      key={index}\n    >\n      <div key={todo.id} onClick={() => completeTodo(todo.id)}>\n        {\" \"}\n        {todo.text}\n      </div>\n\n      <div className=\"icons\">\n        <RiCloseCircleLine\n          onClick={() => removeTodo(todo.id)}\n          className=\"delete-icon\"\n        ></RiCloseCircleLine>\n\n        <TiEdit\n          onClick={() => setEdit({ id: todo.id, value: todo.text })}\n          className=\"edit-icon\"\n        ></TiEdit>\n      </div>\n    </div>\n  ));\n}\n\nexport default Todo;\n\n// To use Icons: npm install react-icons\n",{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":20,"column":46,"nodeType":"33","messageId":"34","endLine":20,"endColumn":58},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"no-unused-vars","'submitUpdate' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]